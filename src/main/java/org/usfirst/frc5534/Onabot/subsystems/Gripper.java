// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5534.Onabot.subsystems;


import org.usfirst.frc5534.Onabot.RobotMap;
import org.usfirst.frc5534.Onabot.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.DoubleSolenoid;


/**
 *
 */
public class Gripper extends Subsystem {

    private DoubleSolenoid gripperPiston;


    public Gripper() {
        
        gripperPiston = new DoubleSolenoid(RobotMap.kPCMCanID, 
                                           RobotMap.kGripperPCMForwardPort,
                                           RobotMap.kGripperPCMBackwardPort);
                                           
        addChild("Gripper Piston",gripperPiston);
        
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new GripperClose());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void open(){
        gripperPiston.set(Value.kForward);
    }

    public void close(){
        gripperPiston.set(Value.kReverse);
    }

}

