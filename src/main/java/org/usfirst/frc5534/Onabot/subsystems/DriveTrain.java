// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc5534.Onabot.subsystems;

import org.usfirst.frc5534.Onabot.RobotMap;
import org.usfirst.frc5534.Onabot.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.drive.MecanumDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    private WPI_TalonSRX frontLeft;
    private WPI_TalonSRX frontRight;
    private WPI_TalonSRX rearLeft;
    private WPI_TalonSRX rearRight;
    private MecanumDrive mecanumDrive1;


    /**
     * DriveTrain() constructor
     * Here we setup some stuff about our drive train.
     */
    public DriveTrain() {

        frontLeft = new WPI_TalonSRX(RobotMap.kFrontLeftTalonID);
        frontRight = new WPI_TalonSRX(RobotMap.kFrontRightTalonID);
        rearLeft = new WPI_TalonSRX(RobotMap.kRearLeftTalonID);
        rearRight = new WPI_TalonSRX(RobotMap.kReadRightTalonID);
        
        mecanumDrive1 = new MecanumDrive(frontLeft, rearLeft,frontRight, rearRight);
        addChild("Mecanum Drive 1",mecanumDrive1);
        mecanumDrive1.setSafetyEnabled(true);
        mecanumDrive1.setExpiration(0.1);
        mecanumDrive1.setMaxOutput(1.0);
        
        // These will have to be fiddled with a bit before the robot will drive correctly.
        frontLeft.setInverted(true);
        rearLeft.setInverted(true);
    }

    @Override
    public void initDefaultCommand() {

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
        setDefaultCommand(new ArcadeDrive());

    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        
    }

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void manualDrive(double leftStickY, double leftStickX, double rightStickX){
        mecanumDrive1.driveCartesian(leftStickY, leftStickX, rightStickX);
    }

    public void stop(){
        mecanumDrive1.stopMotor();
    }


}

